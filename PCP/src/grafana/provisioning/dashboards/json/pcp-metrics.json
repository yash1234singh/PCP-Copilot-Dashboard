{
  "annotations": {
    "list": []
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 1,
  "id": null,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "MHz",
            "drawStyle": "line",
            "fillOpacity": 10,
            "lineWidth": 1,
            "showPoints": "never"
          },
          "unit": "hertz"
        }
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 0
      },
      "id": 1,
      "options": {
        "legend": {
          "calcs": ["mean", "max", "last"],
          "displayMode": "table",
          "placement": "bottom"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb"
          },
          "query": "from(bucket: \"pcp-metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"pcp_metrics\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"product_type\"] == \"${product_type}\")\n  |> filter(fn: (r) => r[\"serialNumber\"] == \"${serialNumber}\")\n  |> filter(fn: (r) => r[\"metric\"] =~ /^psoc\\.now\\.cpu\\./)\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"metric\"], valueColumn: \"_value\")",
          "refId": "A"
        }
      ],
      "title": "CPU Frequency - Product: ${product_type}, SN: ${serialNumber}",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "Â°C",
            "drawStyle": "line",
            "fillOpacity": 10,
            "lineWidth": 2,
            "showPoints": "never"
          },
          "unit": "celsius"
        }
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 0
      },
      "id": 2,
      "options": {
        "legend": {
          "calcs": ["mean", "max", "last"],
          "displayMode": "table",
          "placement": "bottom"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb"
          },
          "query": "from(bucket: \"pcp-metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"pcp_metrics\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"product_type\"] == \"${product_type}\")\n  |> filter(fn: (r) => r[\"serialNumber\"] == \"${serialNumber}\")\n  |> filter(fn: (r) => r[\"metric\"] =~ /^psoc\\.now\\.temp\\./)\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"metric\"], valueColumn: \"_value\")",
          "refId": "A"
        }
      ],
      "title": "Temperature Sensors",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "Volts",
            "drawStyle": "line",
            "fillOpacity": 10,
            "lineWidth": 1,
            "showPoints": "never"
          },
          "unit": "volt"
        }
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 8
      },
      "id": 3,
      "options": {
        "legend": {
          "calcs": ["mean", "max", "last"],
          "displayMode": "table",
          "placement": "bottom"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb"
          },
          "query": "from(bucket: \"pcp-metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"pcp_metrics\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"product_type\"] == \"${product_type}\")\n  |> filter(fn: (r) => r[\"serialNumber\"] == \"${serialNumber}\")\n  |> filter(fn: (r) => r[\"metric\"] =~ /^psoc\\.now\\.vltg\\./)\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"metric\"], valueColumn: \"_value\")",
          "refId": "A"
        }
      ],
      "title": "Voltage Rails",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "Amps",
            "drawStyle": "line",
            "fillOpacity": 10,
            "lineWidth": 1,
            "showPoints": "never"
          },
          "unit": "amp"
        }
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 8
      },
      "id": 4,
      "options": {
        "legend": {
          "calcs": ["mean", "max", "last"],
          "displayMode": "table",
          "placement": "bottom"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb"
          },
          "query": "from(bucket: \"pcp-metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"pcp_metrics\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"product_type\"] == \"${product_type}\")\n  |> filter(fn: (r) => r[\"serialNumber\"] == \"${serialNumber}\")\n  |> filter(fn: (r) => r[\"metric\"] =~ /^psoc\\.now\\.cur\\./)\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"metric\"], valueColumn: \"_value\")",
          "refId": "A"
        }
      ],
      "title": "Current Draw",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "axisLabel": "RPM",
            "drawStyle": "line",
            "fillOpacity": 10,
            "lineWidth": 2,
            "showPoints": "never"
          },
          "unit": "rpm"
        }
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 16
      },
      "id": 5,
      "options": {
        "legend": {
          "calcs": ["mean", "max", "last"],
          "displayMode": "table",
          "placement": "bottom"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb"
          },
          "query": "from(bucket: \"pcp-metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"pcp_metrics\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"product_type\"] == \"${product_type}\")\n  |> filter(fn: (r) => r[\"serialNumber\"] == \"${serialNumber}\")\n  |> filter(fn: (r) => r[\"metric\"] == \"psoc.now.fan.rpm\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)",
          "refId": "A"
        }
      ],
      "title": "Fan Speed (RPM)",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "axisLabel": "%",
            "drawStyle": "line",
            "fillOpacity": 10,
            "lineWidth": 2,
            "showPoints": "never"
          },
          "max": 100,
          "min": 0,
          "unit": "percent"
        }
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 16
      },
      "id": 6,
      "options": {
        "legend": {
          "calcs": ["mean", "max", "last"],
          "displayMode": "table",
          "placement": "bottom"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb"
          },
          "query": "from(bucket: \"pcp-metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"pcp_metrics\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"product_type\"] == \"${product_type}\")\n  |> filter(fn: (r) => r[\"serialNumber\"] == \"${serialNumber}\")\n  |> filter(fn: (r) => r[\"metric\"] == \"psoc.now.fan.duty\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)",
          "refId": "A"
        }
      ],
      "title": "Fan Duty Cycle",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "axisLabel": "Status",
            "drawStyle": "line",
            "fillOpacity": 10,
            "lineWidth": 2,
            "showPoints": "auto"
          },
          "unit": "short"
        }
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 24
      },
      "id": 7,
      "options": {
        "legend": {
          "calcs": ["last"],
          "displayMode": "table",
          "placement": "bottom"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb"
          },
          "query": "from(bucket: \"pcp-metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"pcp_metrics\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"product_type\"] == \"${product_type}\")\n  |> filter(fn: (r) => r[\"serialNumber\"] == \"${serialNumber}\")\n  |> filter(fn: (r) => r[\"metric\"] =~ /heater/)\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"metric\"], valueColumn: \"_value\")",
          "refId": "A"
        }
      ],
      "title": "Heater Metrics",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "influxdb"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "axisLabel": "Status",
            "drawStyle": "line",
            "fillOpacity": 10,
            "lineWidth": 2,
            "showPoints": "auto"
          },
          "unit": "short"
        }
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 24
      },
      "id": 8,
      "options": {
        "legend": {
          "calcs": ["last"],
          "displayMode": "table",
          "placement": "bottom"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "influxdb"
          },
          "query": "from(bucket: \"pcp-metrics\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"pcp_metrics\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> filter(fn: (r) => r[\"product_type\"] == \"${product_type}\")\n  |> filter(fn: (r) => r[\"serialNumber\"] == \"${serialNumber}\")\n  |> filter(fn: (r) => r[\"metric\"] =~ /^psoc\\.now\\.status\\./)\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"metric\"], valueColumn: \"_value\")",
          "refId": "A"
        }
      ],
      "title": "System Status Flags",
      "type": "timeseries"
    }
  ],
  "refresh": "30s",
  "schemaVersion": 38,
  "style": "dark",
  "tags": ["pcp"],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "L5E",
          "value": "L5E"
        },
        "datasource": {
          "type": "influxdb",
          "uid": "influxdb"
        },
        "definition": "import \"influxdata/influxdb/schema\"\nschema.tagValues(\n  bucket: \"pcp-metrics\",\n  tag: \"product_type\",\n  predicate: (r) => r._measurement == \"pcp_metrics\",\n  start: -30d\n)",
        "hide": 0,
        "includeAll": false,
        "label": "Product Type",
        "multi": false,
        "name": "product_type",
        "options": [],
        "query": "import \"influxdata/influxdb/schema\"\nschema.tagValues(\n  bucket: \"pcp-metrics\",\n  tag: \"product_type\",\n  predicate: (r) => r._measurement == \"pcp_metrics\",\n  start: -30d\n)",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "341100896",
          "value": "341100896"
        },
        "datasource": {
          "type": "influxdb",
          "uid": "influxdb"
        },
        "definition": "import \"influxdata/influxdb/schema\"\nschema.tagValues(\n  bucket: \"pcp-metrics\",\n  tag: \"serialNumber\",\n  predicate: (r) => r._measurement == \"pcp_metrics\" and r.product_type == \"${product_type}\",\n  start: -30d\n)",
        "hide": 0,
        "includeAll": false,
        "label": "Serial Number",
        "multi": false,
        "name": "serialNumber",
        "options": [],
        "query": "import \"influxdata/influxdb/schema\"\nschema.tagValues(\n  bucket: \"pcp-metrics\",\n  tag: \"serialNumber\",\n  predicate: (r) => r._measurement == \"pcp_metrics\" and r.product_type == \"${product_type}\",\n  start: -30d\n)",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-7d",
    "to": "now"
  },
  "timezone": "browser",
  "title": "PCP System Metrics",
  "uid": "pcp-metrics",
  "version": 0
}
